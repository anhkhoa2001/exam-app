// <auto-generated />
using System;
using ExamApp.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.Property<int>("ExamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exam_id");

                    b.Property<int>("Access")
                        .HasColumnType("int")
                        .HasColumnName("access");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("GroupID")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int>("PersonalIDCreate")
                        .HasColumnType("int")
                        .HasColumnName("personal_id_create");

                    b.Property<string>("Title")
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total_question");

                    b.HasKey("ExamID");

                    b.HasIndex("GroupID");

                    b.HasIndex("PersonalIDCreate");

                    b.ToTable("ex_exam");
                });

            modelBuilder.Entity("ExamApp.Models.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<string>("Image")
                        .HasColumnType("longtext")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("PersonalIDCreate")
                        .HasColumnType("int")
                        .HasColumnName("personal_id_create");

                    b.HasKey("GroupID");

                    b.HasIndex("PersonalIDCreate");

                    b.ToTable("ex_group");
                });

            modelBuilder.Entity("ExamApp.Models.Personal", b =>
                {
                    b.Property<int>("PersonalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("personal_id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_date");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Image")
                        .HasColumnType("longtext")
                        .HasColumnName("image");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.Property<string>("UID")
                        .HasColumnType("longtext")
                        .HasColumnName("uid");

                    b.HasKey("PersonalID");

                    b.ToTable("ex_personal");
                });

            modelBuilder.Entity("ExamApp.Models.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.Property<string>("Content")
                        .HasColumnType("longtext")
                        .HasColumnName("content");

                    b.Property<int>("ExamID")
                        .HasColumnType("int")
                        .HasColumnName("exam_id");

                    b.HasKey("QuestionID");

                    b.HasIndex("ExamID");

                    b.ToTable("ex_question");
                });

            modelBuilder.Entity("ExamApp.Models.RelationshipGroupAndPersonal", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int>("group_id")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int>("personal_id")
                        .HasColumnType("int")
                        .HasColumnName("personal_id");

                    b.HasKey("MemberID");

                    b.HasIndex("group_id");

                    b.HasIndex("personal_id");

                    b.ToTable("groups_personals");
                });

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.HasOne("ExamApp.Models.Group", "GroupInclude")
                        .WithMany("ExamsIn")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamApp.Models.Personal", "PersonalCreateExam")
                        .WithMany("ExamsBy")
                        .HasForeignKey("PersonalIDCreate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupInclude");

                    b.Navigation("PersonalCreateExam");
                });

            modelBuilder.Entity("ExamApp.Models.Group", b =>
                {
                    b.HasOne("ExamApp.Models.Personal", "PersonalCreate")
                        .WithMany("GroupsOwner")
                        .HasForeignKey("PersonalIDCreate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalCreate");
                });

            modelBuilder.Entity("ExamApp.Models.Question", b =>
                {
                    b.HasOne("ExamApp.Models.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("ExamApp.Models.RelationshipGroupAndPersonal", b =>
                {
                    b.HasOne("ExamApp.Models.Group", "Group")
                        .WithMany("Members")
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamApp.Models.Personal", "Personal")
                        .WithMany("MembersPerson")
                        .HasForeignKey("personal_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ExamApp.Models.Group", b =>
                {
                    b.Navigation("ExamsIn");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("ExamApp.Models.Personal", b =>
                {
                    b.Navigation("ExamsBy");

                    b.Navigation("GroupsOwner");

                    b.Navigation("MembersPerson");
                });
#pragma warning restore 612, 618
        }
    }
}
